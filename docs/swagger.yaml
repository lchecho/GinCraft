basePath: /api/v1
definitions:
  common.MessageResponse:
    properties:
      message:
        description: 响应消息
        example: 操作成功
        type: string
    type: object
  user.LoginRequest:
    properties:
      password:
        description: 密码
        example: "123456"
        type: string
      username:
        description: 用户名
        example: john_doe
        type: string
    required:
    - password
    - username
    type: object
  user.UserLoginResponse:
    properties:
      token:
        description: 访问令牌
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    type: object
  user.RegisterRequest:
    properties:
      email:
        description: 邮箱地址
        example: john@example.com
        type: string
      password:
        description: 密码，6-20个字符
        example: "123456"
        maxLength: 20
        minLength: 6
        type: string
      username:
        description: 用户名，3-20个字符
        example: john_doe
        maxLength: 20
        minLength: 3
        type: string
    required:
    - email
    - password
    - username
    type: object
  user.UserResponse:
    properties:
      created_at:
        description: 创建时间
        example: "2024-01-01T00:00:00Z"
        type: string
      email:
        description: 邮箱地址
        example: john@example.com
        type: string
      id:
        description: 用户ID
        example: 1
        type: integer
      updated_at:
        description: 更新时间
        example: "2024-01-01T00:00:00Z"
        type: string
      username:
        description: 用户名
        example: john_doe
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: GinCraft是一个基于Gin的Go Web框架，提供用户管理等功能
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: GinCraft API
  version: "1.0"
paths:
  /api/v1/user/info:
    get:
      consumes:
      - application/json
      description: 根据访问令牌获取当前用户信息
      parameters:
      - default: Bearer {token}
        description: 访问令牌
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            $ref: '#/definitions/user.UserResponse'
        "401":
          description: 未授权访问
          schema:
            $ref: '#/definitions/common.MessageResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/common.MessageResponse'
      summary: 获取用户信息
      tags:
      - 用户管理
  /api/v1/user/login:
    post:
      consumes:
      - application/json
      description: 用户登录接口，验证用户名和密码并返回访问令牌
      parameters:
      - description: 登录信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 登录成功
          schema:
            $ref: '#/definitions/user.UserLoginResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/common.MessageResponse'
        "401":
          description: 用户名或密码错误
          schema:
            $ref: '#/definitions/common.MessageResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/common.MessageResponse'
      summary: 用户登录
      tags:
      - 用户管理
  /api/v1/user/register:
    post:
      consumes:
      - application/json
      description: 用户注册接口，创建新用户账号
      parameters:
      - description: 注册信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 注册成功
          schema:
            $ref: '#/definitions/common.MessageResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/common.MessageResponse'
        "409":
          description: 用户名或邮箱已存在
          schema:
            $ref: '#/definitions/common.MessageResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/common.MessageResponse'
      summary: 用户注册
      tags:
      - 用户管理
securityDefinitions:
  BearerAuth:
    description: 请输入Bearer token，例如：Bearer {token}
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
